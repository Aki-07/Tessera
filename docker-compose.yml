version: '3.9'

services:
  orchestrator:
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    environment:
      # Use the compose service name 'capsule-demo' so DNS resolves inside the compose network
      CAPSULE_ATTACKER_URL: "http://capsule-demo:9000"
      CAPSULE_DEFENDER_URL: "http://capsule-demo:9000"
      DATA_DIR: "/data"
    volumes:
      - ./data:/data                         # persist battles & logs to host
      - ./services/orchestrator:/app/orchestrator
      - ./config:/app/config
    command: uvicorn orchestrator.app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"

  capsule-demo:
    build:
      context: .
      dockerfile: services/capsule/Dockerfile
    environment:
      ADAPTER_ID: "defender-demo"
      ADAPTER_PATH: "/data/adapter"
    volumes:
      - ./services/capsule:/app/services/capsule
      - ./data/capsules/defender-demo:/data/adapter
    command: uvicorn services.capsule.mcp_server:app --host 0.0.0.0 --port 9000 --reload
    ports:
      - "9000:9000"
  prometheus:
    image: prom/prometheus:v3.0.1
    container_name: tessera-prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - orchestrator
      - capsule-demo
volumes:
  prometheus_data: