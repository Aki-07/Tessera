version: '3.9'

services:
  orchestrator:
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    environment:
      CAPSULE_ATTACKER_URL: "http://capsule-demo:9000"
      CAPSULE_DEFENDER_URL: "http://capsule-demo:9000"
      DATA_DIR: "/data"
      DB_URL: "sqlite:///data/capsule_registry.db"    # ðŸ‘ˆ explicit DB path
    volumes:
      - ./data:/data:rw                             # persist battles, registry, logs
      - ./services/orchestrator:/app/orchestrator
      - ./config:/app/config
    command: uvicorn orchestrator.app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"

  capsule-demo:
    build:
      context: .
      dockerfile: services/capsule/Dockerfile
    environment:
      ADAPTER_ID: "defender-demo"
      ADAPTER_PATH: "/data/adapter"
    volumes:
      - ./services/capsule:/app/services/capsule
      - ./data/capsules/defender-demo:/data/adapter
    command: uvicorn services.capsule.mcp_server:app --host 0.0.0.0 --port 9000 --reload
    ports:
      - "9000:9000"
  prometheus:
    image: prom/prometheus:v3.0.1
    container_name: tessera-prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - orchestrator
      - capsule-demo

  grafana:
    image: grafana/grafana:11.2.2
    container_name: tessera-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"          
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning

  ui:
    build:
      context: services/ui
      dockerfile: Dockerfile 
    container_name: tessera-ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://orchestrator:8000
    depends_on:
      - orchestrator

volumes:
  prometheus_data:
  grafana_data: